service: cloudflare-scanner

provider:
  name: aws
  runtime: provided.al2
  stage: prod
  timeout: 30
  versionFunctions: false
  memorySize: 512
  logRetentionInDays: 14
  tags:
    managed_by: serverless
    itse_app_name: ${self:custom.app_name}
    itse_app_customer: ${self:custom.customer}
    itse_app_env: production
  stackTags:
    managed_by: serverless
    itse_app_name: ${self:custom.app_name}
    itse_app_customer: ${self:custom.customer}
    itse_app_env: production
    name: cloudformation_stack-${self:custom.app_name}-${self:custom.customer}-production
  iam:
    role:
      statements:
      - Effect: "Allow"
        Action:
          - "ses:SendEmail"
        Resource: "*"
  deploymentBucket:
    tags:
      managed_by: serverless
      itse_app_name: ${self:custom.app_name}
      itse_app_customer: ${self:custom.customer}
      itse_app_env: production
      name: s3_bucket-${self:custom.app_name}-${self:custom.customer}-production

custom:
  app_name: cloudflare-scanner
  customer: gtis

package:
  patterns:
    - '!./**'
    - './bootstrap'

functions:
  alerts:
    environment:
      CF_API_TOKEN: ${env:CF_API_TOKEN}
      CF_CONTAINS_STRINGS: ${env:CF_CONTAINS_STRINGS}
      CF_ZONE_NAMES: ${env:CF_ZONE_NAMES}
      SES_AWS_REGION: ${env:AWS_REGION}
      SES_SUBJECT: ${env:SES_SUBJECT}
      SES_RETURN_TO_ADDR: ${env:SES_RETURN_TO_ADDR}
      SES_RECIPIENT_EMAILS: ${env:SES_RECIPIENT_EMAILS}
    handler: bootstrap
    timeout: 300
    events:
      # cron(Minutes Hours Day-of-month Month Day-of-week Year)
      # Either `day-of-month` or `day-of-week` must be a question mark (?)
       - schedule: cron(30 12,14,18,20 ? * MON,TUE,WED,THU,FRI *)
    tags:
      name: lambda_function_1-${self:custom.app_name}-${self:custom.customer}-production

  alerts-usa:
    environment:
      CF_API_TOKEN: ${env:CF_API_TOKEN}
      CF_CONTAINS_STRINGS: ${env:CF_CONTAINS_STRINGS_USA}
      CF_ZONE_NAMES: ${env:CF_ZONE_NAMES}
      SES_AWS_REGION: ${env:AWS_REGION}
      SES_SUBJECT: ${env:SES_SUBJECT}
      SES_RETURN_TO_ADDR: ${env:SES_RETURN_TO_ADDR}
      SES_RECIPIENT_EMAILS: ${env:SES_RECIPIENT_EMAILS_USA}
    handler: bootstrap
    timeout: 300
    events:
      # cron(Minutes Hours Day-of-month Month Day-of-week Year)
      # Either `day-of-month` or `day-of-week` must be a question mark (?)
      - schedule: cron(30 12,14,18,20 ? * MON,TUE,WED,THU,FRI *)
    tags:
      name: lambda_function_2-${self:custom.app_name}-${self:custom.customer}-production

  alerts-eth:
    environment:
      CF_API_TOKEN: ${env:CF_API_TOKEN_2}
      CF_CONTAINS_STRINGS: ${env:CF_CONTAINS_STRINGS}
      CF_ZONE_NAMES: ${env:CF_ZONE_NAMES_2}
      SES_AWS_REGION: ${env:AWS_REGION}
      SES_SUBJECT: ${env:SES_SUBJECT}
      SES_RETURN_TO_ADDR: ${env:SES_RETURN_TO_ADDR}
      SES_RECIPIENT_EMAILS: ${env:SES_RECIPIENT_EMAILS}
    handler: bootstrap
    timeout: 300
    events:
      # cron(Minutes Hours Day-of-month Month Day-of-week Year)
      # Either `day-of-month` or `day-of-week` must be a question mark (?)
      - schedule: cron(30 12,14,18,20 ? * MON,TUE,WED,THU,FRI *)
    tags:
      name: lambda_function_3-${self:custom.app_name}-${self:custom.customer}-production
